var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = FiniteElementContainers","category":"page"},{"location":"#FiniteElementContainers","page":"Home","title":"FiniteElementContainers","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for FiniteElementContainers.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [FiniteElementContainers]","category":"page"},{"location":"#FiniteElementContainers.Assembler","page":"Home","title":"FiniteElementContainers.Assembler","text":"\n\n\n\n","category":"type"},{"location":"#FiniteElementContainers.DynamicAssembler","page":"Home","title":"FiniteElementContainers.DynamicAssembler","text":"Is::AbstractVector\nJs::AbstractVector\nunknown_dofs::AbstractVector\nblock_sizes::AbstractVector\nblock_offsets::AbstractVector\nresiduals::AbstractArray\nstiffnesses::AbstractVector\nmasses::AbstractVector\nklasttouch::Any\ncsrrowptr::Any\ncsrcolval::Any\ncsrnzval::Any\ncsccolptr::Any\ncscrowval::Any\ncscnzval::Any\n\nAssembler for dynamic problems without damping\n\nProvides both a mass and stiffness matrix\n\n\n\n\n\n","category":"type"},{"location":"#FiniteElementContainers.DynamicAssembler-Union{Tuple{Fs}, Tuple{DofManager, Fs}} where Fs","page":"Home","title":"FiniteElementContainers.DynamicAssembler","text":"Default initialization Assumes no dirichlet bcs\n\nTODO add typing to constructor\n\n\n\n\n\n","category":"method"},{"location":"#FiniteElementContainers.StaticAssembler","page":"Home","title":"FiniteElementContainers.StaticAssembler","text":"Is::AbstractVector\nJs::AbstractVector\nunknown_dofs::AbstractVector\nblock_sizes::AbstractVector\nblock_offsets::AbstractVector\nresiduals::AbstractArray\nstiffnesses::AbstractVector\nklasttouch::Any\ncsrrowptr::Any\ncsrcolval::Any\ncsrnzval::Any\ncsccolptr::Any\ncscrowval::Any\ncscnzval::Any\n\nAssembler for static or quasistatic problems where only a stiffness matrix is necessary\n\n\n\n\n\n","category":"type"},{"location":"#FiniteElementContainers.StaticAssembler-Union{Tuple{Fs}, Tuple{DofManager, Fs}} where Fs","page":"Home","title":"FiniteElementContainers.StaticAssembler","text":"Default initialization Assumes no dirichlet bcs\n\nTODO add typing to constructor\n\n\n\n\n\n","category":"method"},{"location":"#FiniteElementContainers.assemble!-Tuple{DynamicAssembler, DofManager, FunctionSpace, Vararg{Any, 6}}","page":"Home","title":"FiniteElementContainers.assemble!","text":"assemble!(\n    assembler::DynamicAssembler,\n    dof::DofManager,\n    fspace::FunctionSpace,\n    X,\n    U,\n    block_id,\n    residual_func,\n    tangent_func,\n    mass_func\n)\n\n\nSimple method for assembling in serial\n\nassemble!(\n    assembler,\n    dof,\n    fspace,\n    X,\n    U,\n    block_id,\n    residual_func,\n    tangent_func,\n    mass_func\n)\n\ndefined at /home/runner/work/FiniteElementContainers.jl/FiniteElementContainers.jl/src/assemblers/DynamicAssemblers.jl:162.\n\n\n\n\n\n","category":"method"},{"location":"#FiniteElementContainers.assemble!-Tuple{StaticAssembler, DofManager, FunctionSpace, Vararg{Any, 5}}","page":"Home","title":"FiniteElementContainers.assemble!","text":"assemble!(\n    assembler::StaticAssembler,\n    dof::DofManager,\n    fspace::FunctionSpace,\n    X,\n    U,\n    block_id,\n    residual_func,\n    tangent_func\n)\n\n\nSimple method for assembling in serial\n\nassemble!(\n    assembler,\n    dof,\n    fspace,\n    X,\n    U,\n    block_id,\n    residual_func,\n    tangent_func\n)\n\ndefined at /home/runner/work/FiniteElementContainers.jl/FiniteElementContainers.jl/src/assemblers/StaticAssembler.jl:148.\n\n\n\n\n\n","category":"method"},{"location":"#FiniteElementContainers.assemble!-Union{Tuple{M2}, Tuple{M1}, Tuple{DynamicAssembler, M1, M2, Int64, Int64}} where {M1<:(AbstractMatrix{<:Number}), M2<:(AbstractMatrix{<:Number})}","page":"Home","title":"FiniteElementContainers.assemble!","text":"assemble!(\n    assembler::DynamicAssembler,\n    K_el::AbstractMatrix{<:Number},\n    M_el::AbstractMatrix{<:Number},\n    block_id::Int64,\n    el_id::Int64\n) -> AbstractMatrix{<:Number}\n\n\nassembly for stiffness matrix\n\nassemble!(assembler, K_el, M_el, block_id, el_id)\n\ndefined at /home/runner/work/FiniteElementContainers.jl/FiniteElementContainers.jl/src/assemblers/DynamicAssemblers.jl:143.\n\n\n\n\n\n","category":"method"},{"location":"#FiniteElementContainers.assemble!-Union{Tuple{M}, Tuple{StaticAssembler, M, Int64, Int64}} where M<:(AbstractMatrix)","page":"Home","title":"FiniteElementContainers.assemble!","text":"assemble!(\n    assembler::StaticAssembler,\n    K_el::AbstractMatrix,\n    block_id::Int64,\n    el_id::Int64\n) -> AbstractMatrix\n\n\nassembly for stiffness matrix\n\nassemble!(assembler, K_el, block_id, el_id)\n\ndefined at /home/runner/work/FiniteElementContainers.jl/FiniteElementContainers.jl/src/assemblers/StaticAssembler.jl:130.\n\n\n\n\n\n","category":"method"},{"location":"#FiniteElementContainers.assemble!-Union{Tuple{V2}, Tuple{V1}, Tuple{Assembler, V1, V2}} where {V1<:(AbstractVector{<:Number}), V2<:(AbstractVector{<:Integer})}","page":"Home","title":"FiniteElementContainers.assemble!","text":"assemble!(\n    assembler::Assembler,\n    R_el::AbstractVector{<:Number},\n    conn::AbstractVector{<:Integer}\n)\n\n\nassembly method for just a residual vector\n\nTODO need to add an Atomix lock here TODO add block_id to fspace or something like that\n\nassemble!(assembler, R_el, conn)\n\ndefined at /home/runner/work/FiniteElementContainers.jl/FiniteElementContainers.jl/src/assemblers/Assemblers.jl:20.\n\n\n\n\n\n","category":"method"},{"location":"#FiniteElementContainers.bc_ids-Union{Tuple{Dofs}, Tuple{NSets}, Tuple{DofManager, NSets, Dofs}} where {NSets, Dofs}","page":"Home","title":"FiniteElementContainers.bc_ids","text":"bc_ids(dof_manager::DofManager, nsets, dofs) -> Any\n\n\neventually use this method\n\nbc_ids(dof_manager, nsets, dofs)\n\ndefined at /home/runner/work/FiniteElementContainers.jl/FiniteElementContainers.jl/src/DofManagers.jl:69.\n\n\n\n\n\n","category":"method"},{"location":"#FiniteElementContainers.file_name-Tuple{FiniteElementContainers.AbstractMesh}","page":"Home","title":"FiniteElementContainers.file_name","text":"file_name(mesh::FiniteElementContainers.AbstractMesh) -> Any\n\n\nReturns file name for an mesh type\n\nfile_name(mesh)\n\ndefined at /home/runner/work/FiniteElementContainers.jl/FiniteElementContainers.jl/src/Meshes.jl:18.\n\n\n\n\n\n","category":"method"},{"location":"#FiniteElementContainers.float_type-Union{Tuple{Assembler{R, I}}, Tuple{I}, Tuple{R}} where {R, I}","page":"Home","title":"FiniteElementContainers.float_type","text":"float_type(_::Assembler{R, I}) -> Any\n\n\nfloat_type(_)\n\ndefined at /home/runner/work/FiniteElementContainers.jl/FiniteElementContainers.jl/src/assemblers/Assemblers.jl:11.\n\n\n\n\n\n","category":"method"},{"location":"#FiniteElementContainers.int_type-Union{Tuple{Assembler{R, I}}, Tuple{I}, Tuple{R}} where {R, I}","page":"Home","title":"FiniteElementContainers.int_type","text":"int_type(_::Assembler{R, I}) -> Any\n\n\nint_type(_)\n\ndefined at /home/runner/work/FiniteElementContainers.jl/FiniteElementContainers.jl/src/assemblers/Assemblers.jl:7.\n\n\n\n\n\n","category":"method"},{"location":"#FiniteElementContainers.update_unknown_dofs!-Union{Tuple{DofManager{T, ND, NN, A, V}}, Tuple{V}, Tuple{A}, Tuple{NN}, Tuple{ND}, Tuple{T}} where {T, ND, NN, A, V}","page":"Home","title":"FiniteElementContainers.update_unknown_dofs!","text":"update_unknown_dofs!(\n    dof::DofManager{T, ND, NN, A, V}\n) -> Any\n\n\n\"Default\" method to reset all dofs to unknown\n\nupdate_unknown_dofs!(dof)\n\ndefined at /home/runner/work/FiniteElementContainers.jl/FiniteElementContainers.jl/src/DofManagers.jl:46.\n\n\n\n\n\n","category":"method"},{"location":"#FiniteElementContainers.update_unknown_dofs!-Union{Tuple{V}, Tuple{Assembler, Any, Any, V}} where V<:(AbstractVector{<:Integer})","page":"Home","title":"FiniteElementContainers.update_unknown_dofs!","text":"update_unknown_dofs!(\n    assembler::Assembler,\n    dof,\n    fspaces,\n    nodes_in::AbstractVector{<:Integer}\n) -> Any\n\n\nmethod that assumes first dof TODO move sorting of nodes up stream TODO remove other scratch unknowns and unknown_dofs arrays\n\nupdate_unknown_dofs!(assembler, dof, fspaces, nodes_in)\n\ndefined at /home/runner/work/FiniteElementContainers.jl/FiniteElementContainers.jl/src/assemblers/Assemblers.jl:35.\n\n\n\n\n\n","category":"method"},{"location":"#FiniteElementContainers.update_unknown_dofs!-Union{Tuple{V}, Tuple{DofManager, V}} where V<:(AbstractVector{<:Integer})","page":"Home","title":"FiniteElementContainers.update_unknown_dofs!","text":"update_unknown_dofs!(\n    dof_manager::DofManager,\n    dofs::AbstractVector{<:Integer}\n) -> Any\n\n\nMethod when all dofs are updated at once\n\nFirst it resets all dofs to unknowns, then one by one sets dofs to bcs in dofs\n\nAssumes there's a unique set of nodes provided\n\nupdate_unknown_dofs!(dof_manager, dofs)\n\ndefined at /home/runner/work/FiniteElementContainers.jl/FiniteElementContainers.jl/src/DofManagers.jl:58.\n\n\n\n\n\n","category":"method"},{"location":"#SparseArrays.sparse!-Tuple{DynamicAssembler}","page":"Home","title":"SparseArrays.sparse!","text":"sparse!(\n    assembler::DynamicAssembler\n) -> Tuple{SparseArrays.SparseMatrixCSC, SparseArrays.SparseMatrixCSC}\n\n\nsparse!(assembler)\n\ndefined at /home/runner/work/FiniteElementContainers.jl/FiniteElementContainers.jl/src/assemblers/DynamicAssemblers.jl:123.\n\n\n\n\n\n","category":"method"},{"location":"#SparseArrays.sparse!-Tuple{StaticAssembler}","page":"Home","title":"SparseArrays.sparse!","text":"sparse!(\n    assembler::StaticAssembler\n) -> SparseArrays.SparseMatrixCSC\n\n\nsparse!(assembler)\n\ndefined at /home/runner/work/FiniteElementContainers.jl/FiniteElementContainers.jl/src/assemblers/StaticAssembler.jl:117.\n\n\n\n\n\n","category":"method"},{"location":"#SparseArrays.sparse-Tuple{DynamicAssembler}","page":"Home","title":"SparseArrays.sparse","text":"sparse(\n    assembler::DynamicAssembler\n) -> Tuple{SparseArrays.SparseMatrixCSC, SparseArrays.SparseMatrixCSC}\n\n\nsparse(assembler)\n\ndefined at /home/runner/work/FiniteElementContainers.jl/FiniteElementContainers.jl/src/assemblers/DynamicAssemblers.jl:114.\n\n\n\n\n\n","category":"method"},{"location":"#SparseArrays.sparse-Tuple{StaticAssembler}","page":"Home","title":"SparseArrays.sparse","text":"sparse(\n    assembler::StaticAssembler\n) -> SparseArrays.SparseMatrixCSC\n\n\nsparse(assembler)\n\ndefined at /home/runner/work/FiniteElementContainers.jl/FiniteElementContainers.jl/src/assemblers/StaticAssembler.jl:110.\n\n\n\n\n\n","category":"method"},{"location":"fields/#NodalField","page":"Fields","title":"NodalField","text":"","category":"section"},{"location":"fields/#ElementField","page":"Fields","title":"ElementField","text":"","category":"section"},{"location":"fields/#QuadratureField","page":"Fields","title":"QuadratureField","text":"","category":"section"},{"location":"meshes/#How-to-add-a-new-mesh-file-format-to-the-framework","page":"Meshes","title":"How to add a new mesh file format to the framework","text":"","category":"section"}]
}
