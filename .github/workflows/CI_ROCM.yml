name: CI_ROCM
on:
  push:
    branches:
      - main
    tags: ['*']
  pull_request:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - self-hosted - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: [self-hosted, linux, rocm]
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.11'
          - '1.10'
        arch:
          - x64
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
      # - uses: julia-actions/julia-runtest@v1
      - name: test-rocm
        run: |
          HIP_VISIBLE_DEVICES=0 julia --project=@. -e 'using Pkg; Pkg.test("FiniteElementContainers"; coverage=true, julia_args=["--check-bounds=yes", "--compiled-modules=yes", "--depwarn=yes"], force_latest_compatible_version=false, allow_reresolve=true)'
      - name: Filter coverage to remove @kernel functions
        run: |
          julia --project=@. -e '
            using Pkg
            Pkg.add("Coverage")
          '
        run: |
          julia --project=@. -e '
            using Coverage

            # Collect all coverage results
            cov = Coverage.process_folder("src")
            append!(cov, Coverage.process_folder("test"))

            # Filter out files with @kernel lines (adjust to your needs)
            filtered = filter(c -> !any(occursin("@kernel", l) for l in readlines(c.filename)), cov)

            # Write filtered lcov file
            Coverage.LCOV.writefile("lcov.info", filtered)
          '
        shell: bash
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v5
        with:
          files: lcov.info
          #plugins: noop
          #disable_search: true
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
